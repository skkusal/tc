rm -rf ./test/clos* && ./gawk -C && ./gawk -V -W && ./gawk -f a b count=1 c && ./gawk -- a b
cp ./awklib/eg/prog/anagram.awk a && ./gawk '/12/{ sum += $1 } END { print sum }/21/' a
./gawk --lint -e a main.c && echo "aaa bb " > b && cp ./awklib/eg/lib/getopt.awk c
./gawk '{split($0, array, /[.?!]/); for (i=1; i<=length(array); i++) {print gsub(/m*/, "X");}}' a
./gawk -F 'a' "{NR % 2 == 0; print \"\042\" $0 \"\042\"  $0 ~ /[ \t\n]/}" a && ./gawk --help
./gawk -F '(^x+)|( +)' '{ for (i = 1; i <= NF; i++) printf "-->%s<--\n", $i, v2 }'-v v2="v" a
echo "b 41\nr\nset nwords=3\np words data\ns\nr\nw 1\nbt\ndown 1\ndump\nh\nc" | ./gawk -D -f a b
./gawk --profile=myprog.prof -f a a a && ./gawk -"W" version
AB="./awklib/eg/lib/"; for z in "$AB"*.awk; do ./gawk -f "$AB$(basename "$z")" a b; done
./gawk 'BEGIN{x="abc";index("a", "b") atan2(x, x) match(x, x)log(x) rand() length(x) strtonum(x);}'
./gawk 'BEGIN{split("a", a, "-", seps) sprintf("1 = %.2f (approx.)", 22/7); sub(/\|/, "\\&");}'
./gawk --posix '{ print $1 + 0 }' a && ./gawk -M 'BEGIN {printf("%0.25f\n", 1/10) }'
./gawk -f c -v _getopt_test=3 -- -a -cbARG bax -x -f && ./gawk -v A=1 -f c B=2 /dev/null
echo foooobazbarrrrr | ./gawk '{ match($0, /(fo+).+(bar*)/, arr); print arr[1], arr[2] }'
./gawk -f ./test/fwtest.awk -f ./test/argtest.awk -f ./test/fmttest.awk -f ./awklib/extract.awk a
./gawk -f ./test/intest.awk -f ./test/nlstringtest.awk -f ./awklib/passwd.awk c
AB="./test/"; for z in "$AB"*.awk; do ./gawk -f "$AB$(basename "$z")" a; done & sleep 2.7; kill $!
echo "b 28\nb 32\nr\nsi 2\nni 2\nc\nreturn 3\nu 49\ndisplay sort\nl -\ncommands" | ./gawk -D -f a b
echo "b 32\nr\neval "n"\nend\nw n\nunwatch 2\nwhere 1\nf 0\ni args" | ./gawk -D -f a b
echo "b 32\nr\ni args\ni break\ni display\ni frame\ni functions\n" | ./gawk -D -f a b
echo "b 32\nr\ni locals\ni sources\ni variables\ni watch\no history_size" | ./gawk -D -f a b
echo "b a:32\nb word2key\nr\nr\nl +\nl 2\nl a:44\nl word2key\np @a\np a word i" | ./gawk -D -f a b
./gawk -r -s -S -t -M -v PREC=201 'BEGIN { print (0.1 + 12.2 == 12.3) }'
./gawk --optimize -M 'BEGIN { PREC = 113; printf("%0.25f\n", 1/10) }' -v PREC=150
./gawk -n -N -I -M 'BEGIN { n = 13; print (n + 0.0) % 2.0 }'
./gawk -g -d a && ./gawk -e 'BEGIN { a = 5 ;}'  && ./gawk -V
./gawk -v sq="'" 'BEGIN { print "Here is a single quote <" sq ">" }'
echo "b 32\nr\nclear a:32\ntrace off\nq\ndisplay $0\n silent\nend\nexit" | ./gawk -D -f a b
AB="./test/"; for z in "$AB"*.awk; do ./gawk -f "$AB$(basename "$z")" a; done & sleep 2; kill $!
echo "b a:32\nb 47\nr\nclear a:32\ndisable 2\ne 2\nc\nt a:34\nignore 3 10\nr" | ./gawk -D -f a b